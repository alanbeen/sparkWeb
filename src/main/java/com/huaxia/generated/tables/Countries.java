/**
 * This class is generated by jOOQ
 */
package com.huaxia.generated.tables;


import com.huaxia.generated.Test;
import com.huaxia.generated.tables.records.CountriesRecord;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Countries extends TableImpl<CountriesRecord> {

    private static final long serialVersionUID = 1701527503;

    /**
     * The reference instance of <code>test.countries</code>
     */
    public static final Countries COUNTRIES = new Countries();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CountriesRecord> getRecordType() {
        return CountriesRecord.class;
    }

    /**
     * The column <code>test.countries.code</code>.
     */
    public final TableField<CountriesRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.CHAR.length(2).nullable(false), this, "");

    /**
     * The column <code>test.countries.year</code>.
     */
    public final TableField<CountriesRecord, Integer> YEAR = createField("year", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>test.countries.gdp_per_capita</code>.
     */
    public final TableField<CountriesRecord, BigDecimal> GDP_PER_CAPITA = createField("gdp_per_capita", org.jooq.impl.SQLDataType.DECIMAL.precision(10, 2).nullable(false), this, "");

    /**
     * The column <code>test.countries.govt_debt</code>.
     */
    public final TableField<CountriesRecord, BigDecimal> GOVT_DEBT = createField("govt_debt", org.jooq.impl.SQLDataType.DECIMAL.precision(10, 2).nullable(false), this, "");

    /**
     * Create a <code>test.countries</code> table reference
     */
    public Countries() {
        this("countries", null);
    }

    /**
     * Create an aliased <code>test.countries</code> table reference
     */
    public Countries(String alias) {
        this(alias, COUNTRIES);
    }

    private Countries(String alias, Table<CountriesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Countries(String alias, Table<CountriesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Countries as(String alias) {
        return new Countries(alias, this);
    }

    /**
     * Rename this table
     */
    public Countries rename(String name) {
        return new Countries(name, null);
    }
}
