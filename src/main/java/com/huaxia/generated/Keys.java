/**
 * This class is generated by jOOQ
 */
package com.huaxia.generated;


import com.huaxia.generated.tables.RoleUser;
import com.huaxia.generated.tables.Roles;
import com.huaxia.generated.tables.Users;
import com.huaxia.generated.tables.records.RoleUserRecord;
import com.huaxia.generated.tables.records.RolesRecord;
import com.huaxia.generated.tables.records.UsersRecord;

import javax.annotation.Generated;

import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>test</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<RolesRecord> KEY_ROLES_PRIMARY = UniqueKeys0.KEY_ROLES_PRIMARY;
    public static final UniqueKey<RoleUserRecord> KEY_ROLE_USER_PRIMARY = UniqueKeys0.KEY_ROLE_USER_PRIMARY;
    public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = UniqueKeys0.KEY_USERS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<RolesRecord> KEY_ROLES_PRIMARY = createUniqueKey(Roles.ROLES, "KEY_roles_PRIMARY", Roles.ROLES.ROLE_ID);
        public static final UniqueKey<RoleUserRecord> KEY_ROLE_USER_PRIMARY = createUniqueKey(RoleUser.ROLE_USER, "KEY_role_user_PRIMARY", RoleUser.ROLE_USER.ROLE_ID, RoleUser.ROLE_USER.USER_ID);
        public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = createUniqueKey(Users.USERS, "KEY_users_PRIMARY", Users.USERS.USER_ID);
    }
}
